/* Base Styles */
:root {
    --bg-color: #0f0f23; /* Dark blue background like diogotc.com */
    --text-color: #f0f0f0; /* Light text for dark background */
    --accent-color: #8A8AFF; /* Lighter blue accent */
    --secondary-color: #adb5c7; /* Lighter secondary text */
    --light-accent: #272752; /* Darker accent for tags */
    --card-bg: rgba(20, 20, 40, 0.5); /* Slightly transparent dark card background */
    --purple-circle: #6f78c3; /* Color for the circles in the new layout */
    --dotted-line-color: rgba(255, 255, 255, 0.5); /* Color for the dotted line */
    --footer-bar-color: #414b7c; /* Color for the fixed footer bar */
    --language-btn-bg: #1e2231; /* Background for language buttons */
    --language-btn-active-bg: #6f78c3; /* Active background for language buttons */
}

/* Reset and base styles */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

/* Canvas Background */
#background {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1;
}

a {
    color: var(--accent-color);
    text-decoration: none;
    transition: color 0.3s ease;
}

a:hover {
    opacity: 0.8;
}

/* Basic Styles */
body {
    margin: 0;
    padding: 0;
    font-family: 'Outfit', 'Roboto', 'Helvetica Neue', HelveticaNeue, Helvetica, 'TeXGyreHeros', 'FreeSans', 'Nimbus Sans L', 'Liberation Sans', Arial, sans-serif;
    background-color: var(--bg-color); /* Example background color */
    color: white; /* Example text color */
    display: flex; /* Use flexbox for layout */
    flex-direction: column; /* Stack elements vertically */
    min-height: 100vh; /* Ensure body takes at least full viewport height */
    line-height: 1.6;
}

/* Container */
.container {
    width: 80vw;
    margin: 0 auto;
    padding: 1.5rem;
    min-height: 100vh;
    display: flex;
    flex-direction: column;
}

/* Header */
header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1rem 0;
}

/* Keep the .logo flex container styles */
.logo {
    display: flex; /* Keeps the header as a flex container */
    align-items: center; /* Vertically centers the SVG within the logo area */
    /* gap: 1rem; */ /* This gap will no longer have an effect as there's only one child */
}

/* Add a style for the SVG image inside the logo container */
.logo img {
    /* Set the size of the SVG - matching the old logo-circle size */
    width: 3.75rem; /* Sets the width using relative units (60px / 16px = 3.75) */
    height: 3.75rem; /* Sets the height using relative units (60px / 16px = 3.75) */
    display: block; /* Good practice for images */
    /* Optional: object-fit can help if your SVG isn't exactly square but you want it contained */
    /* object-fit: contain; */
    opacity: 0.7;
}

.nav a {
    color: var(--text-color);
    text-decoration: none;
    font-weight: 500;
    display: flex;
    align-items: center;
    gap: 0.3rem;
}

/* Main content */
main {
    flex: 1; /* Allows the main content to grow and occupy available space in the flex container (body/container) */
    display: flex; /* Enables flexbox layout for direct children */
    align-items: center; /* Aligns direct children vertically in the center */
    justify-content: space-between; /* Distributes space between direct children */
    padding: 2rem 0; /* Adds vertical inner space (padding) using relative units */
    gap: 1.5rem;

    
}

.content {
    width: 27vw;

    font-weight: 300;
}

.profile-info {
    width: 27vw;
    font-size: 1rem;
    margin-bottom: 0.1rem;
    padding-left: 0.5rem;
    margin-top: 10px;
}

.profile-info p {
    text-align: right;
}

.profile-description {
    border-top: 0.06rem dotted var(--dotted-line-color);
    padding-top: 1rem;
    margin-top: 1rem;
}

/* New container to hold the image and buttons vertically */
.image-and-buttons-container {
    display: flex;
    flex-direction: column; /* Stack its children (image and buttons) vertically */
    align-items: center; /* Center the children horizontally within this container */
    gap: 5rem; /* Add space between the image container and the buttons */
    /* Inherit or set width properties as needed for the main flex layout */
     max-width: 27vw; /* Example: Match the previous image container width */
     width: 100%; /* Allow it to shrink */

    /* Ensure it can shrink within the main flex container */
    flex-basis: auto;
    flex-grow: 0;
    flex-shrink: 1;
    min-width: 0;
}

.top-adjust-box{

    display: flex; /* Arrange buttons in a row */
    flex-direction: row;
    justify-content: center; /* Center the buttons horizontally */
    gap: 1rem; /* Add space between buttons */
    margin-top: 1rem; /* Add space above the buttons */
    /* Adjust width as needed, perhaps matching the image container width */
    max-width: 27vw; /* Example: Match image container width */
    width: 100%; /* Allow shrinking on smaller screens */
    height: 5vh;
}

/* Styles for the new image buttons container */
.image-buttons {
    display: flex; /* Arrange buttons in a row */
    flex-direction: row;
    justify-content: center; /* Center the buttons horizontally */
    gap: 1rem; /* Add space between buttons */
    margin-top: 1rem; /* Add space above the buttons */
    /* Adjust width as needed, perhaps matching the image container width */
    max-width: 27vw; /* Example: Match image container width */
    width: 100%; /* Allow shrinking on smaller screens */
}

/* Styles for the individual image buttons */
.image-button {
    background-color: var(--social-link-bg, #1e2231); /* Use a similar background to social links or define a new variable */
    border: none; /* Remove default button border */
    padding: 0.5rem; /* Add some padding inside the button */
    cursor: pointer; /* Indicate it's clickable */
    display: flex; /* Use flexbox to center the icon */
    justify-content: center; /* Center icon horizontally */
    align-items: center; /* Center icon vertically */
    width: 4rem; /* Set a fixed size for the square button */
    height: 4rem; /* Set a fixed size for the square button */
    border-radius: 0.5rem; /* Optional: Add slightly rounded corners */
    transition: opacity 0.3s ease; /* Add a subtle hover effect */
    opacity: 0.7;
}

.image-button:hover {
    opacity: 0.8;
    background-color: #898c96;
}

.image-button img {
    display: block; /* Ensure the image is a block element */
    max-width: 100%; /* Make sure the icon fits within the button */
    max-height: 100%; /* Make sure the icon fits within the button */
    object-fit: contain; /* Scale the image to fit without distortion */
}

.profile-image-container {
    position: relative;
    
    /* Ensure this container is square - this is key for the child image to form a perfect circle */
    aspect-ratio: 1 / 1;
    /* Adjust width for flexibility in flex row */
    /* Use max-width here to control the size in the main layout */
    max-width: 27vw; /* Retained vw for initial layout, acts as a max size */
    width: 100%; /* Allow it to shrink below max-width if container is smaller */

    /* Ensure it can shrink */
    flex-basis: auto;
    flex-grow: 0;
    flex-shrink: 1;
    min-width: 0;

    /* Center the image container itself within the main flex container */
    display: flex;
    justify-content: center;
    align-items: center;

    /* Use aspect-ratio to maintain square shape based on the calculated width */
    aspect-ratio: 1 / 1; /* Maintains a 1:1 aspect ratio */
}

.profile-image img {
    display: block; /* Recommended for images */
    /* Set a maximum size directly on the image */
    max-width: 20rem; /* Example max width */
    max-height: 20rem; /* Example max height */
    /* Ensure it doesn't exceed its container's bounds if container is smaller */
    width: 100%;
    height: 100%;
    /* Keep the properties from the container if you want the circular shape and cropping */
    border-radius: 50%; /* You might need to apply this to the img if it was only on the container */
    object-fit: cover; /* Keep this for cropping */
}



/* Name section */
.name-section {
    min-width: 27vw;
    font-size: 4rem; /* Sets the font size using relative units */
    font-weight: 400; /* Sets the font weight */
    line-height: 1; /* Sets the spacing between lines of text */
    
}

.name-section h1 {
    font-size: 4rem;
    font-weight: 100;
    line-height: 1;
    margin-bottom: 0.5rem;
    text-align: left;
    
}

.name-section .subtitle {
    font-size: 1rem;
    font-weight: 50;
    
    padding-top: 0.5rem;
    padding-bottom: 0.5rem;
    text-align: right;
}

/* Social links */
.social-links {
    display: flex;
    align-items: left;
    gap: 1rem;
    
}

.social-link {
    width: 1.875rem; /* Sets the width using relative units (30px / 16px = 1.875) */
    height: 1.875rem; /* Sets the height using relative units (30px / 16px = 1.875) */
    background-color: var(--social-link-bg); /* Applies the social link background color from the CSS variable */
    border-radius: 50%; /* Creates a perfect circle */
    display: flex; /* Enables flexbox layout for centering content inside the link */
    align-items: center; /* Aligns content vertically in the center */
    justify-content: center; /* Aligns content horizontally in the center */
    color: var(--text-color); /* Applies the text color from the CSS variable */
    text-decoration: none; /* Removes the default underline from links */
    font-size: 0.875rem; /* Sets the font size for the icon/text inside using relative units */
}

/* Footer */
footer {
    /*background-color: var(--footer-bar-color);*/
    padding: 1rem 0;
    margin-top: auto;
    /* Added styles from previous style.css for consistency */
    text-align: center;
}

/*
  Responsive styles for smaller screens
*/
@media (max-width: 48rem) {
    main {
        flex-direction: column;
        text-align: center;
        gap: 1.5rem;
        justify-content: center;
        align-items: center;
    }

    /* Adjust direct children of main in column layout */
    main > .content,
    main > .profile-image-container,
    main > .name-section {
        width: 100%; /* Make them take full width in column layout */
        max-width: 100%; /* Ensure they don't exceed container width */
        flex-basis: auto;
        flex-grow: 0;
        flex-shrink: 1;
        min-width: 0;
        margin-left: 0;
        margin-right: 0;
    }

    /* Adjust the profile image container in column layout */
    .profile-image-container {
        /* Control size with a percentage of viewport width */
        width: 50vw; /* Example: 50% of viewport width */
        /* Set a maximum size */
        max-width: 15.625rem;
        /* Keep aspect-ratio to ensure square shape based on the set width */
        aspect-ratio: 1 / 1; /* Explicitly keep aspect ratio */

        /* Remove explicit height setting, aspect-ratio handles it */
        height: auto; /* Allow height to be determined by aspect-ratio */
        max-height: none; /* Remove max-height as width/aspect-ratio control size */

        margin-bottom: 1.25rem;
    }

    /* The image and background should still fill their container which is now square */
    .profile-image {
        width: 100%;
        height: 100%;
        max-width: unset;
        max-height: unset;
        flex-shrink: 0;
    }


     .profile-info {
         padding-left: 0;
         text-align: center;
     }


     .name-section {
         text-align: center;
         min-width: unset;
     }

     .name-section h1 {
         font-size: 3rem;
     }

     .name-section .subtitle {
         text-align: center;
     }

     .social-links {
         justify-content: center;
         align-items: center;
     }
}

/*
  Responsive styles for very small screens
*/
@media (max-width: 30rem) {
    .name-section h1 {
        font-size: 2rem;
    }

    .nav a {
        gap: 0.625rem;
    }

    /* Further adjust the profile image container size on very small screens */
    .profile-image-container {
        width: 60vw; /* Example: 60% of viewport width */
        max-width: 12.5rem; /* Further adjusted max size */
        /* Keep aspect-ratio */
        aspect-ratio: 1 / 1;
        /* Remove explicit height setting */
        height: auto;
        max-height: none; /* Remove max-height */
    }

    /* The image and background should still fill their container */
    .profile-image {
        width: 100%;
        height: 100%;
    }

    .container {
        padding: 1rem;
    }
}